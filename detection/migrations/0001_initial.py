# Generated by Django 5.1.4 on 2025-06-16 05:39

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CropImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Uploaded crop image for analysis.', upload_to='uploads/%Y/%m/%d/', verbose_name='Image')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the image was uploaded.', verbose_name='Uploaded At')),
                ('language', models.CharField(choices=[('en', 'English'), ('es', 'Spanish')], default='en', help_text='Language used for AI analysis and result display.', max_length=10, verbose_name='Language')),
                ('plant_type', models.CharField(blank=True, help_text='Type of plant or crop identified (e.g., Tomato, Rice).', max_length=100, verbose_name='Plant Type')),
                ('disease_name', models.CharField(blank=True, choices=[('healthy', 'Healthy'), ('bacterial_blight', 'Bacterial Blight'), ('brown_spot', 'Brown Spot'), ('leaf_blast', 'Leaf Blast'), ('tungro', 'Tungro'), ('bacterial_leaf_streak', 'Bacterial Leaf Streak'), ('sheath_blight', 'Sheath Blight'), ('early_blight', 'Early Blight'), ('powdery_mildew', 'Powdery Mildew'), ('downy_mildew', 'Downy Mildew'), ('mosaic_virus', 'Mosaic Virus'), ('unknown', 'Unknown Disease')], help_text="Identified disease or 'Healthy' if no disease detected.", max_length=100, verbose_name='Disease Name')),
                ('confidence', models.FloatField(blank=True, help_text='Confidence percentage of the AI diagnosis.', null=True, verbose_name='Confidence Score')),
                ('explanation', models.TextField(blank=True, help_text='Detailed explanation of the diagnosis and symptoms.', verbose_name='Explanation')),
                ('treatment', models.TextField(blank=True, help_text='Recommended treatment and preventive measures.', verbose_name='Treatment')),
                ('is_processed', models.BooleanField(default=False, help_text='Indicates if the image has been processed by AI.', verbose_name='Is Processed')),
                ('processing_error', models.TextField(blank=True, help_text='Error message if AI processing failed.', verbose_name='Processing Error')),
                ('user', models.ForeignKey(blank=True, help_text='The user who uploaded the image, if authenticated.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Crop Image',
                'verbose_name_plural': 'Crop Images',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='DetectionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(blank=True, help_text='Session identifier for anonymous users.', max_length=100, verbose_name='Session ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='Client IP address for tracking.', null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, help_text='Client user agent for tracking.', verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the detection was recorded.', verbose_name='Created At')),
                ('crop_image', models.ForeignKey(help_text='The associated crop image.', on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='detection.cropimage', verbose_name='Crop Image')),
                ('user', models.ForeignKey(blank=True, help_text='The user who performed the detection, if authenticated.', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Detection History',
                'verbose_name_plural': 'Detection Histories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='cropimage',
            index=models.Index(fields=['uploaded_at'], name='detection_c_uploade_821637_idx'),
        ),
        migrations.AddIndex(
            model_name='cropimage',
            index=models.Index(fields=['user', 'is_processed'], name='detection_c_user_id_f0a6a4_idx'),
        ),
        migrations.AddIndex(
            model_name='detectionhistory',
            index=models.Index(fields=['session_id'], name='detection_d_session_15086a_idx'),
        ),
        migrations.AddIndex(
            model_name='detectionhistory',
            index=models.Index(fields=['user', 'created_at'], name='detection_d_user_id_05bad8_idx'),
        ),
    ]
